@mixin btn-border($background-color){
  background-color: $background-color;
  border-color: $background-color !important;
  .x-btn-inner-default-toolbar-small{
    color: $lightest-color;
  }
  &:hover{
    .x-btn-inner-default-toolbar-small,.x-btn-inner-default-small{
      color: $background-color;
    }
    .x-btn-icon-el-default-small,.x-btn-icon-el-default-toolbar-small{
      color: $background-color;
    }
    background-color: transparent;
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}
/*
@mixin box-shadow($h-shadow,$v-shadow,$blur,$spread,$shadow-color) {
  $value: $h-shadow, $v-shadow, $blur, $spread, $shadow-color;
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  -ms-box-shadow: $value;
  box-shadow: $value;
}
*/
@mixin box-shadow($h-shadow,$v-shadow,$blur,$spread,$shadow-color) {
  -webkit-box-shadow: $h-shadow $v-shadow $blur $spread $shadow-color;
  -moz-box-shadow: $h-shadow $v-shadow $blur $spread $shadow-color;
  -ms-box-shadow: $h-shadow $v-shadow $blur $spread $shadow-color;
  box-shadow: $h-shadow $v-shadow $blur $spread $shadow-color;
}

@mixin animation($animation...) {
  $max: length($animation);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animation, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  animation:         $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

*:focus {
  outline:0 !important;
}

.x-menu-header {
  z-index: 0 !important;
}

.x-css-shadow{
  box-shadow:none !important;
}

.x-fa, .x-fa, .x-fas, .x-far, .x-fab {
  display: inline-block;
  font: normal normal normal 14px/1 $font-family;
}

.alignRight {
  float: right;
}

.boldFont {
  font-weight: bold;
}

