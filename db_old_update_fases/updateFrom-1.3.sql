BEGIN TRANSACTION;
CREATE VIEW IF NOT EXISTS courses(id, name, name_2, name_3, attribute_1, attribute_2, attribute_3, attribute_4, attribute_5, partner_type_id, entity_id, type_description, type_code) AS SELECT p.id, p.name, p.name_2, p.name_3, p.attribute_1, p.attribute_2, p.attribute_3, p.attribute_4, p.attribute_5, p.partner_type_id, p.entity_id, pt.type_description, pt.type_code FROM partners p INNER JOIN partner_types pt on p.partner_type_id = pt.id WHERE p.partner_type_id = 1;

CREATE VIEW IF NOT EXISTS donators(id, name, name_2, name_3, attribute_1, attribute_2, attribute_3, attribute_4, attribute_5, partner_type_id, entity_id, type_description, type_code) AS SELECT p.id, p.name, p.name_2, p.name_3, p.attribute_1, p.attribute_2, p.attribute_3, p.attribute_4, p.attribute_5, p.partner_type_id, p.entity_id, pt.type_description, pt.type_code FROM partners p INNER JOIN partner_types pt on p.partner_type_id = pt.id WHERE p.partner_type_id = 4;

CREATE VIEW IF NOT EXISTS students(id, name, name_2, name_3, attribute_1, attribute_2, attribute_3, attribute_4, attribute_5, partner_type_id, entity_id, type_description, type_code, course_id, course_name, course_name_2, course_name_3, course_attribute_1, course_attribute_2, course_attribute_3, course_attribute_4, course_attribute_5, course_type_description, course_type_code, family_id, family_name, family_name_2, family_name_3, family_attribute_1, family_attribute_2, family_attribute_3, family_attribute_4, family_attribute_5, family_type_description, family_type_code) AS SELECT p.id, p.name, p.name_2, p.name_3, p.attribute_1, p.attribute_2, p.attribute_3, p.attribute_4, p.attribute_5, p.partner_type_id, p.entity_id, pt.type_description, pt.type_code, courses.course_id, courses.name course_name, courses.name_2 course_name_2, courses.name_3 course_name_3, courses.attribute_1 course_attribute_1, courses.attribute_2 course_attribute_2, courses.attribute_3 course_attribute_3, courses.attribute_4 course_attribute_4, courses.attribute_5 course_attribute_5, courses.type_description course_type_description, courses.type_code course_type_code, families.family_id, families.name family_name, families.name_2 family_name_2, families.name_3 family_name_3, families.attribute_1 family_attribute_1, families.attribute_2 family_attribute_2, families.attribute_3 family_attribute_3, families.attribute_4 family_attribute_4, families.attribute_5 family_attribute_5, families.type_description family_type_description, families.type_code family_type_code FROM partners p INNER JOIN partner_types pt on p.partner_type_id = pt.id LEFT JOIN ( SELECT pc.id course_id, pc.name, pc.name_2, pc.name_3, pc.attribute_1, pc.attribute_2, pc.attribute_3, pc.attribute_4, pc.attribute_5, pc.partner_type_id, pc.entity_id, ptc.type_description, ptc.type_code, prc.partner_id FROM partners pc INNER JOIN partner_types ptc ON pc.partner_type_id = ptc.id INNER JOIN partners_relations prc ON pc.id = prc.parent_partner_id WHERE pc.partner_type_id = 1 ) courses ON p.id = courses.partner_id AND p.entity_id = courses.entity_id LEFT JOIN ( SELECT pf.id family_id, pf.name, pf.name_2, pf.name_3, pf.attribute_1, pf.attribute_2, pf.attribute_3, pf.attribute_4, pf.attribute_5, pf.partner_type_id, pf.entity_id, ptf.type_description, ptf.type_code, prf.partner_id FROM partners pf INNER JOIN partner_types ptf ON pf.partner_type_id = ptf.id INNER JOIN partners_relations prf ON pf.id = prf.parent_partner_id WHERE pf.partner_type_id = 3 ) families ON p.id = families.partner_id AND p.entity_id = families.entity_id WHERE p.partner_type_id = 2;

CREATE VIEW IF NOT EXISTS suppliers(id, name, name_2, name_3, attribute_1, attribute_2, attribute_3, attribute_4, attribute_5, partner_type_id, entity_id, type_description, type_code) AS SELECT p.id, p.name, p.name_2, p.name_3, p.attribute_1, p.attribute_2, p.attribute_3, p.attribute_4, p.attribute_5, p.partner_type_id, p.entity_id, pt.type_description, pt.type_code FROM partners p INNER JOIN partner_types pt on p.partner_type_id = pt.id WHERE p.partner_type_id = 5;
CREATE VIEW IF NOT EXISTS receipts_all( id , receipt_type_id , payment_type_id, partner_id, receipt_date, receipt_period_start, receipt_period_end, amount, currency, notes, entity_id, base_user_id , printed, name, name_2, name_3, attribute_1, attribute_2, attribute_3, attribute_4, attribute_5, type_description, type_code, course_id, course_name, course_name_2, course_name_3, course_attribute_1, course_attribute_2, course_attribute_3, course_attribute_4, course_attribute_5, course_type_description, course_type_code, family_id, family_name, family_name_2, family_name_3, family_attribute_1, family_attribute_2, family_attribute_3, family_attribute_4, family_attribute_5, family_type_description, family_type_code ) AS SELECT r.id , r.receipt_type_id , r.payment_type_id, r.partner_id, r.receipt_date, r.receipt_period_start, r.receipt_period_end, r.amount, r.currency, r.notes, r.entity_id, r.base_user_id , r.printed, s.name || d.name as name, s.name_2 || d.name_2 as name_2, s.name_3 || d.name_3 as name_3, s.attribute_1 || d.attribute_1 as attribute_1, s.attribute_2 || d.attribute_2 as attribute_2, s.attribute_1 || d.attribute_3 as attribute_3, s.attribute_4 || d.attribute_4 as attribute_4, s.attribute_5 || d.attribute_5 as attribute_5, s.type_description || d.type_description as type_description, s.type_code || d.type_code as type_code, s.course_id, s.course_name, s.course_name_2, s.course_name_3, s.course_attribute_1, s.course_attribute_2, s.course_attribute_3, s.course_attribute_4, s.course_attribute_5, s.course_type_description, s.course_type_code, s.family_id, s.family_name, s.family_name_2, s.family_name_3, s.family_attribute_1, s.family_attribute_2, s.family_attribute_3, s.family_attribute_4, s.family_attribute_5, s.family_type_description, s.family_type_code FROM receipts r INNER JOIN receipt_types rt ON r.receipt_type_id = rt.id INNER JOIN payment_types pt ON r.payment_type_id = pt.id INNER JOIN students s ON s.id = r.partner_id and s.entity_id = r.entity_id INNER JOIN donators d ON d.id = r.partner_id;
COMMIT;